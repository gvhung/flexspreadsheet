<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" xmlns:ns1="com.mechan.MecGrid.*" backgroundColor="#ffffff" creationComplete="initApp()" viewSourceURL="srcview/index.html">
<mx:Script>
	<![CDATA[
		import mx.controls.Alert;
		import com.mechan.MecGrid.mecGridClasses.MecGridEvent;
		import com.mechan.MecGrid.mecGridClasses.CellOp;
		import com.mechan.MecGrid.mecGridClasses.MecGridConst;
		
		private function initApp():void
		{
			mgrid.addEventListener(MecGridEvent.DRAW_COMPLETED, displayGridEvent);
			mgrid.addEventListener(MecGridEvent.SELECTION_CHANGED, displayGridEvent);
			mgrid.addEventListener(MecGridEvent.BEGIN_EDIT_CELL, beginEditCellHandler);
			mgrid.addEventListener(MecGridEvent.CHECK_STATE_CHANGED, beginEditCellHandler);
			mgrid.addEventListener(MecGridEvent.END_EDIT_CELL, displayGridEvent);
			mgrid.addEventListener(MecGridEvent.TREE_OPENED, displayGridEvent);
			mgrid.addEventListener(MecGridEvent.TREE_COLLAPSED, displayGridEvent);
		}
		
// DOUBLE CLICK CELL EDITING
		private function beginEditCellHandler(event:MecGridEvent):void
		{
			displayGridEvent(event);
			
			if (event.edit_colIndex == 5)
			{
				mgrid.EditCell(event, CellOp.EDIT_TEXT);
			}
			else if (event.edit_colIndex == 6)
			{
				mgrid.EditCell(event, CellOp.EDIT_COMBOBOX, ["combo selection 1", "combo selection 2", "combo selection 3"]);
			}
		}

// POPULATE SAMPLE DATA (LIST)
		private function populateGridData():void
		{
			mgrid.merge_option = MecGridConst.MERGE_FIXED;
			mgrid.Cols.defaultwidth = 80;
			mgrid.Rows.defaultheight = 18;
			
			mgrid.editable = true;
			mgrid.redraw = false;
			
			// clear all resources
			mgrid.Rows.count = 0;
			mgrid.Cols.count = 0;
			
			mgrid.spreadSheetStyle = true;
			
			mgrid.Rows.count = nrow.value;
			mgrid.Cols.count = ncolumn.value;
			mgrid.Rows.fixed = 2;
			
			var i:int;
			var j:int;
			
			mgrid.AddColumn(0);
			
			mgrid.AddRow(0, "No.;Browser;Visits;Visits;Visits;Visits;Bounce Rates;Pageviews;Pageviews;PageViews");
			mgrid.AddRow(1, "No.;Browser;Visits;%visits;New Visitors;Unique Visitors;Bounce Rates;Pageviews;Average;Time on site");
			
			for (i=mgrid.Rows.fixed; i < mgrid.Rows.count; i++)
			{
				for (j=0; j < mgrid.Cols.count; j++)
				{
					if (j == 0)
					{
						mgrid.set_cell(CellOp.TEXT, i, j, i);
					}
					else
					{
						mgrid.set_cell(CellOp.TEXT, i, j, "r" + i + ",c" + j);
					}
				}
			}
			
			mgrid.Cols.item(3).autowidth = false;
			mgrid.Cols.item(3).width = 100;
			mgrid.Cols.item(3).datatype = CellOp.STATUSBAR;
			
			for (i=mgrid.Rows.fixed; i < mgrid.Rows.count; i++)
			{
				mgrid.set_cell(CellOp.TEXT, i, 3, Math.random() * 100);
			}
			
			mgrid.Cols.item(4).autowidth = true;
			mgrid.Cols.item(4).textalign = CellOp.TEXTALIGN_CENTER_CENTER;
			mgrid.Cols.item(4).datatype = CellOp.TEXT;
			
			mgrid.Cols.item(5).editable = true;
			mgrid.Cols.item(6).editable = true;
			mgrid.Cols.item(7).editable = false;
			mgrid.Cols.item(8).editable = false;
			
			mgrid.Cols.item(7).datatype = CellOp.BOOLEAN;
			mgrid.Cols.item(7).textalign = CellOp.TEXTALIGN_CENTER_CENTER;
			mgrid.Cols.item(8).datatype = CellOp.TEXT;
			mgrid.Cols.item(8).textalign = CellOp.TEXTALIGN_LEFT_CENTER;
			
			mgrid.SelectionMode = CellOp.SELECTIONMODE_ROW;
			
			mgrid.redraw = true;
		}

// LOAD SAMPLE XML DATA FOR TREE
		[Embed(source='/test.xml')]
		private var xmlSource:Class;
	
		private function loadDataProvider():void
		{
			mgrid.redraw = false;
			
			mgrid.Rows.count = mgrid.Rows.fixed;
			mgrid.Cols.count = 4;
			
			mgrid.Cols.item(0).dataField = "@name";
			mgrid.Cols.item(1).dataField = "@type";
			mgrid.Cols.item(2).dataField = "@desc";
			mgrid.Cols.item(3).dataField = "@ratio";
			
			mgrid.treeGridData = true;
			mgrid.dataProvider = XML(xmlSource.data);
			
			mgrid.redraw = true;
		}

// USER ACTION
		private function changeSelectionMode(event:Event):void
		{
			switch (mgridSelectionMode.selectedValue)
			{
			case "Row":
				mgrid.SelectionMode = CellOp.SELECTIONMODE_ROW;
				break;
			case "Column":
				mgrid.SelectionMode = CellOp.SELECTIONMODE_CELL;
				break;
			} 
		}
		
		
		private function changeSpreadSheetStyle():void
		{
			mgrid.spreadSheetStyle = btnSpreadSheetStyle.selected;
			mgrid.redraw = true;
		}
// MISC
		private function displayGridEvent(e:MecGridEvent):void
		{
			var ndisp:String = "";
			
			ndisp = ">> EVENT " + e.type + "\n";
			
			switch (e.type)
			{
			case MecGridEvent.DRAW_COMPLETED:
				var strAreaInfo:String = "render {left:" + mgrid.leftColumn + ",top:" + mgrid.topRow + ",right:" + mgrid.rightColumn + ",bottom:" + mgrid.bottomRow + "}"
				labelVisibleArea.text = strAreaInfo;
				break;
			case MecGridEvent.SELECTION_CHANGED:
				break;
			}
			
			txtEventInfo.text = ndisp + txtEventInfo.text;
		}
	]]>
</mx:Script> 
	<ns1:MecGrid id="mgrid" right="218" left="10" top="78" bottom="10"/>
	<mx:Button y="10" label="Populate Data" click="populateGridData()" left="317" width="108"/>
	<mx:TextArea id="txtEventInfo" width="200" right="10" top="104" bottom="10"/>
	<mx:TextInput width="200" fontWeight="bold" text="Event Information" textDecoration="underline" fontStyle="italic" borderStyle="inset" cornerRadius="2" borderColor="#D1DDE6" backgroundColor="#F6DBDB" right="10" top="78" height="22"/>
	<mx:NumericStepper id="nrow" x="53" y="10" minimum="10" maximum="1000000" value="40"/>
	<mx:NumericStepper id="ncolumn" x="216" y="10" minimum="10" maximum="1000000" value="20"/>
	<mx:Label x="154" y="12" text="Columns"/>
	<mx:Label x="10" y="12" text="Rows"/>
	<mx:RadioButtonGroup id="mgridSelectionMode" change="changeSelectionMode(event)"/>
	<mx:RadioButton x="10" y="45" label="SelectRow" groupName="mgridSelectionMode" selected="true" value="Row"/>
	<mx:RadioButton x="90" y="45" label="SelectCell" groupName="mgridSelectionMode" value="Column"/>
	<mx:Button label="Load Dataprovider" right="10" top="10" click="loadDataProvider()"/>
	<mx:CheckBox id="btnSpreadSheetStyle" x="207" y="45" label="SpreadSheetStyle" click="changeSpreadSheetStyle()" selected="true"/>
	<mx:Label x="366.5" y="47" id="labelVisibleArea"/>
</mx:Application>
